version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: dev-postgres
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U appuser -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: node:20-alpine
    container_name: dev-backend
    working_dir: /app
    env_file: .env
    environment:
      DATABASE_URL: postgresql://appuser:apppass@postgres:5432/mydb
      PORT: 3001
      SWAGGER_ENABLED: "true"
    command: sh -c "corepack enable && pnpm install && pnpm run start:dev"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
      - pnpm_store:/root/.pnpm-store
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    image: node:20-alpine
    container_name: dev-frontend
    working_dir: /app
    environment:
      PORT: 3000
      NUXT_PORT: 3000
      NUXT_HOST: 0.0.0.0
      NUXT_PUBLIC_API_BASE: "/api"
    # Expose Nuxt on network; proxy /api to backend service
    command: sh -c "corepack enable && pnpm install && pnpm run dev -- -p 3000 --host 0.0.0.0"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
      - pnpm_store:/root/.pnpm-store
    ports:
      - "3000:3000"
    depends_on:
      - backend

volumes:
  postgres_data:
  frontend_node_modules:
  backend_node_modules:
  pnpm_store: